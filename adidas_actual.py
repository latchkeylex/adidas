# -*- coding: utf-8 -*-
"""adidas actual

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_Px_6if7hCGl9qzS3fiXhCgnVkXQRugs
"""

from google.colab import drive
drive.mount('/content/drive')

path = '/content/drive/My Drive/adidas.csv'

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv(path)

# Show the first few rows of the dataset
print(data.head())

# Get some basic statistics about the dataset
print(data.describe())

# Check the data types of the columns
print(data.dtypes)

print(data.columns)

data.info()

# Dropping duplicate rows
data.drop_duplicates(inplace=True)

# Bar chart
data.groupby('name').size().plot(kind='bar')
plt.show()

# Bar chart
data.groupby('category').size().plot(kind='bar')
plt.show()

x = data["category"]
y = data["selling_price"]

sns.scatterplot(x=x, y=y)
plt.show()

"""This was a test to show selling price in correspondence with category. We need 'name' as our x axis. Our client is making hoodies and jackets. We need to cypher through the 'name' entries and only select names that pertain to hoodies and jackets."""

# create a boolean mask
mask = data["breadcrumbs"].str.contains("Shoes")

# use the mask to select only the rows where column_name contains specific_word
filtered_data = data.loc[mask]

# see filtered data in the name column
print(filtered_data["breadcrumbs"])

mask = data["breadcrumbs"].str.contains("Shoes")
filtered_data = data.loc[mask]

print(filtered_data["breadcrumbs"])

print(filtered_data[filtered_data["breadcrumbs"].str.contains("Shoes")])

print(filtered_data.shape)

# Descriptive statistics
print(filtered_data.describe())

# Frequency - returns the frequency of unique values in the column
print(filtered_data["breadcrumbs"].value_counts())

# Create a scatter plot
filtered_data.plot(kind="scatter", x="selling_price", y="breadcrumbs", title="Scatter plot of breadcrumbs and selling price")

# Show the chart
plt.show()

import plotly.express as px

fig = px.scatter_3d(filtered_data, x='selling_price', y='breadcrumbs', z='name')
fig.show()

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(filtered_data['selling_price'], filtered_data['reviews_count'], filtered_data['average_rating'])
plt.show()